!!!
%html
	%head
		%title The Reality League
		%link{:href => "http://fonts.googleapis.com/css?family=Patua+One|Open+Sans", :rel => "stylesheet", :type => "text/css"}/
		%link{:href => "//maxcdn.bootstrapcdn.com/font-awesome/4.1.0/css/font-awesome.min.css", :rel => "stylesheet"}/
		%link{:href => "//netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap.min.css", :rel => "stylesheet"}/
		= stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track' => true
		= javascript_include_tag 'application', 'data-turbolinks-track' => false
		= csrf_meta_tags
	%body
		/ #fb-root
		/ 	:javascript
		/ 		// This is called with the results from from FB.getLoginStatus().
		/ 		function statusChangeCallback(response) {
		/ 			console.log('statusChangeCallback');
		/ 			console.log(response);
		/ 			// The response object is returned with a status field that lets the
		/ 			// app know the current login status of the person.
		/ 			// Full docs on the response object can be found in the documentation
		/ 			// for FB.getLoginStatus().
		/ 			if (response.status === 'connected') {
		/ 				// Logged into your app and Facebook.
		/ 				testAPI();
		/ 			} else if (response.status === 'not_authorized') {
		/ 				// The person is logged into Facebook, but not your app.
		/ 				document.getElementById('status').innerHTML = 'Please log ' +
		/ 					'into this app.';
		/ 			} else {
		/ 				// The person is not logged into Facebook, so we're not sure if
		/ 				// they are logged into this app or not.
		/ 				document.getElementById('status').innerHTML = 'Please log ' +
		/ 					'into Facebook.';
		/ 			}
		/ 		}

		/ 		// This function is called when someone finishes with the Login
		/ 		// Button.  See the onlogin handler attached to it in the sample
		/ 		// code below.
		/ 		function checkLoginState() {
		/ 			FB.getLoginStatus(function(response) {
		/ 				statusChangeCallback(response);
		/ 			});
		/ 		}

		/ 		window.fbAsyncInit = function() {
		/ 		FB.init({
		/ 			appId      : '1488570754762932',
		/ 			cookie     : true,  // enable cookies to allow the server to access 
		/ 													// the session
		/ 			xfbml      : true,  // parse social plugins on this page
		/ 			version    : 'v2.1' // use version 2.1
		/ 		});

		/ 		// Now that we've initialized the JavaScript SDK, we call 
		/ 		// FB.getLoginStatus().  This function gets the state of the
		/ 		// person visiting this page and can return one of three states to
		/ 		// the callback you provide.  They can be:
		/ 		//
		/ 		// 1. Logged into your app ('connected')
		/ 		// 2. Logged into Facebook, but not your app ('not_authorized')
		/ 		// 3. Not logged into Facebook and can't tell if they are logged into
		/ 		//    your app or not.
		/ 		//
		/ 		// These three cases are handled in the callback function.

		/ 		FB.getLoginStatus(function(response) {
		/ 			statusChangeCallback(response);
		/ 		});

		/ 		};

		/ 		// Load the SDK asynchronously
		/ 		(function(d, s, id) {
		/ 			var js, fjs = d.getElementsByTagName(s)[0];
		/ 			if (d.getElementById(id)) return;
		/ 			js = d.createElement(s); js.id = id;
		/ 			js.src = "//connect.facebook.net/en_US/sdk.js";
		/ 			fjs.parentNode.insertBefore(js, fjs);
		/ 		}(document, 'script', 'facebook-jssdk'));

		/ 		// Here we run a very simple test of the Graph API after login is
		/ 		// successful.  See statusChangeCallback() for when this call is made.
		/ 		function testAPI() {
		/ 			console.log('Welcome!  Fetching your information.... ');
		/ 			FB.api('/me', function(response) {
		/ 				console.log('Successful login for: ' + response.name);
		/ 				document.getElementById('status').innerHTML =
		/ 					'Thanks for logging in, ' + response.name + '!';
		/ 			});
		/ 		}
		/ 	/
		/ 		Below we include the Login Button social plugin. This button uses
		/ 		the JavaScript SDK to present a graphical Login button that triggers
		/ 		the FB.login() function when clicked.
		/ 	%login-button{:onlogin => "checkLoginState();", :scope => "public_profile,email"}
		.wrapper
			%nav.navbar.navbar-default{:role => "navigation"}
				.container-fluid
					.navbar-header
						= link_to "The Reality League", root_path, {:class => "navbar-brand"}
					.collapse.navbar-collapse
						%ul.nav.navbar-nav
							%li= link_to "About", pages_about_path
							%li.dropdown
								- if @current_user
									%a.dropdown-toggle{"data-toggle" => "dropdown", :href => "/leagues"}
										Leagues
										%span.caret
									%ul.dropdown-menu{:role => "menu"}
										%li= link_to "My Dashboard", leagues_path
										%li.divider
										%li= link_to "Create New League", new_league_path
										%li= link_to "Search Leagues", leagues_search_path
								- else
									%li= link_to "Leagues", leagues_search_path
							%li.dropdown
								%a.dropdown-toggle{"data-toggle" => "dropdown", :href => "/shows"}
									Shows
									%span.caret
								%ul.dropdown-menu{:role => "menu"}
									%li= link_to "View all shows", shows_path
									%li.divider
									- @shows.each do |show|
										%li= link_to show.name, show_path(show.id)
							- if @current_user && @current_user.admin?
								%li.dropdown
									%a.dropdown-toggle{"data-toggle" => "dropdown", :href => "/admin"}
										Admin
										%span.caret
									%ul.dropdown-menu{:role => "menu"}
										%li= link_to "Admin Dashboard", admin_path
										%li.divider
										%li.dropdown-header Shows
										%li= link_to "Add new show", new_show_path
										%li= link_to "View/update show", shows_path
										%li.divider
										%li.dropdown-header Seasons & Episodes
										%li= link_to "Add new season", new_season_path
										%li= link_to "View/update seasons", seasons_path
										%li= link_to "Add new episode", new_episode_path
										%li= link_to "Add/view/update contestants", contestants_path
										%li.divider
										%li.dropdown-header Show Schemes
										%li= link_to "View/update schemes", schemes_path
										%li.divider
										%li.dropdown-header Events
										%li= link_to "Track events", new_event_path
										%li.divider
										%li.dropdown-header Users
										/ FIXME
										%li= link_to "View all users", "#"
										%li= link_to "View all leagues", "#"	
										%li= link_to "View all rosters", "#"									
						%ul.nav.navbar-nav.navbar-right
							- if @current_user.present?
								%li
									%a{:href => user_path(@current_user)}
										= @current_user.username
								%li
									%a{:href => "/login", :data => {:method => :delete, :confirm => 'Really logout?'}} Logout
							- else
								%li
									%a{:href => "/users/new"} Sign Up
								%li
									%a{:href => "/login"} Sign In
			= yield
			.copyright
				Built by Fai Weiner for GA's WDI-5
				#status