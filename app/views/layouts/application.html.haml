!!!
%html
	%head
		%title The Reality League
		/ %link{:href => "http://fonts.googleapis.com/css?family=Patua+One|Open+Sans", :rel => "stylesheet", :type => "text/css"}/
		%link{:href => "//maxcdn.bootstrapcdn.com/font-awesome/4.1.0/css/font-awesome.min.css", :rel => "stylesheet"}/
		= stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track' => true
		= javascript_include_tag 'application', 'data-turbolinks-track' => false
		= csrf_meta_tags
	%body
		.wrapper
			%nav.navbar.navbar-default{:role => "navigation"}
				.container-fluid
					.navbar-header
						= link_to "The Reality League", root_path, {:class => "navbar-brand"}
					.collapse.navbar-collapse
						%ul.nav.navbar-nav
							%li= link_to "About", pages_about_path
							%li.dropdown
								- if @current_user
									%a.dropdown-toggle{"data-toggle" => "dropdown", :href => "/leagues"}
										Leagues
										%span.caret
									%ul.dropdown-menu{:role => "menu"}
										%li= link_to "My Dashboard", leagues_path
										%li.divider
										%li= link_to "Create New League", new_league_path
										%li= link_to "Search Leagues", leagues_search_path
								- else
									%li= link_to "Leagues", leagues_search_path
							%li.dropdown
								%a.dropdown-toggle{"data-toggle" => "dropdown", :href => "/shows"}
									Shows
									%span.caret
								%ul.dropdown-menu{:role => "menu"}
									%li= link_to "View all shows", shows_path
									%li.divider
									- @shows.each do |show|
										%li= link_to show.name, show_path(show.id)
							- if @current_user && @current_user.admin?
								%li.dropdown
									%a.dropdown-toggle{"data-toggle" => "dropdown", :href => "/admin"}
										Admin
										%span.caret
									%ul.dropdown-menu{:role => "menu"}
										%li= link_to "Admin Dashboard", admin_path
										%li.divider
										%li.dropdown-header Shows
										%li= link_to "Add new show", new_show_path
										%li= link_to "View/update show", admin_shows_path
										%li.divider
										%li.dropdown-header Seasons & Episodes
										%li= link_to "Manage seasons", admin_seasons_path
										%li= link_to "Add new season", new_season_path
										%li= link_to "Add new episode", new_episode_path
										%li.divider
										%li.dropdown-header Show Schemes
										%li= link_to "View/update schemes", schemes_path
										%li.divider
										%li.dropdown-header Events
										%li= link_to "Track events", new_event_path			
						%ul.nav.navbar-nav.navbar-right
							- if @current_user.present?
								%li
									%a{:href => "#"}
										= @current_user.username
								%li
									%a{:href => user_path(@current_user)}
										%span.glyphicon.glyphicon-cog
								%li
									%a{:href => "/login", :data => {:method => :delete, :confirm => 'Really logout?'}} Logout
							- else
								%li
									%a{:href => "/users/new"} Sign Up
								%li
									%a{:href => "/login"} Sign In
			= yield
			.copyright
				Built by Fai Weiner for GA's WDI-5
				#status
			%footer
				%button.btn.btn-primary#feedbackBox{"data-target" => "#commentModal", "data-toggle" => "modal", :type => "button"}
					%i.glyphicon.glyphicon-comment
				/ Modal
				#commentModal.modal.fade{"aria-hidden" => "true", "aria-labelledby" => "myModalLabel", :role => "dialog", :tabindex => "-1"}
					.modal-dialog
						.modal-content
							.modal-header
								%button.close{"aria-label" => "Close", "data-dismiss" => "modal", :type => "button"}
									%span{"aria-hidden" => "true"} &times;
								%h4#commentModalLabel.modal-title Feedback
							= form_for(@message, :method => "POST", :id => "commentForm") do |f|
								.modal-body#commentModalBody
									.form-group.alert#post-response-box
										Alert Here.
									.form-group
										= f.hidden_field(:user_id, value: @current_user.id)
									.form-group#post-type-box
										= f.label :messagetype, "Type"
										= f.select(:messagetype, options_for_select([["Feature Request"], ["Report a Bug"]]), {}, {class:"form-control"})
									.form-group#post-comment-box
										= f.label :messagecomment, "Comment/Questions"
										= f.text_area :messagecomment, class:"form-control"
									.form-group
										%button.btn.btn-default.btn-sm#form-cancel-button{:type => "button", :data => {"dismiss" => "modal"}} 
											Close
										/ %button.btn.btn-primary.btn-sm#submitComment{:type => "button"}
										/ 	Submit
										= f.submit "Submit", :type => "submit", class: "btn btn-primary btn-sm", id: "form-submit-button"
	
					